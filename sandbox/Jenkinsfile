pipeline {
    agent {
        dockerfile {
            dir 'sandbox'
            filename 'Dockerfile.sdk'
        }
    }
    stages {
        stage('Verify Branch') {
            steps {
                echo "Branch is $GIT_BRANCH"
                echo "Workspace is $WORKSPACE"
            }
        }
        stage('Verify Environment') {
            steps {
                sh '''
                dotnet --list-sdks
                dotnet --list-runtimes
                '''
                sh 'printenv'
                sh 'ls -l "$WORKSPACE"'
            }
        }
        stage('Build') {
            steps {
                dir("$WORKSPACE") {
                    sh 'dotnet build "sandbox/src/webapi/Sandbox.Webapi.csproj"'
                }
            }
        }
        stage('Unit Test') {
            steps {
                dir("$WORKSPACE") {
                    sh 'dotnet test sandbox/src/tests/Sandbox.Tests.csproj'
                }
            }
        }
        stage('Publish') {
            steps {
                dir("$WORKSPACE") {
                    sh 'dotnet publish -c Release -o out "sandbox/src/webapi/Sandbox.Webapi.csproj"'
                }
            }
        }
        stage('Docker Build') {
            steps {
                script {
                    image = docker.build("spdrcr911/sandbox-api", "--pull -f ./sandbox/Dockerfile")
                }
            }
        }
        stage('Start container') {
            steps {
                script {
                    container = image.run()
                    container.stop()
                }
            }
            post {
                success {
                    echo "App started successfully :)"
                }
                failure {
                    echo "App failed to start :("
                }
            }
        }
        // stage('Test API Rest') {
        //    steps {
        //       sh 'newman run "./tests/Newman/Sandbox API Test Collection.postman_collection.json" -e "./tests/Newman/Sandbox API Test Environment - Dev.postman_environment.json" -r junit,html --reporter-junit-export var/reports/newman/junit/newman.xml --reporter-html-export var/reports/newman/html/index.html'

        //       publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: 'var/reports/newman/html', reportFiles: 'index.html', reportName: 'Newman API Test', reportTitles: ''])
        //    }
        // }      
        // stage('Stop test app') {
        //    steps {
        //       // echo "docker-compose down" // this doesn't work, but would be better than solution
        //       sh "docker stop myapp"
        //       sh "docker rm myapp"
        //    }
        // }
    }
}
